#include <gtest/gtest.h>
#include <gmock/gmock.h>

extern "C" {
#include "formats.h"
}

#include "data/ccl/CCLP1.ccl.h"
char const* titles[] = {
  "Key Pyramid",
  "Slip and Slide",
  "Present Company",
  "Block Party",
  "Facades",
  "When Insects Attack",
  "Under Pressure",
  "Switcheroo",
  "Swept Away",
  "Graduation",
  "Basketball",
  "Leave No Stone Unturned",
  "The Monster Cages",
  "Wedges",
  "Twister",
  "Tetragons",
  "Tiny",
  "Square Dancing",
  "Feel the Static",
  "Chip Suey",
  "Generic Ice Level",
  "Repair the Maze",
  "Circles",
  "Chip's Checkers",
  "Mind Lock",
  "Trafalgar Square",
  "Teleport Depot",
  "The Last Starfighter",
  "Sky High or Deep Down",
  "Button Brigade",
  "Quincunx",
  "Nitroglycerin",
  "Spitting Image",
  "Just a Bunch of Letters",
  "Mystery Wall",
  "Rhombus",
  "Habitat",
  "Heat Conductor",
  "Dig and Dig",
  "Sea Side",
  "Descending Ceiling",
  "Mughfe",
  "Gears",
  "Frozen Labyrinth",
  "Who's the Boss?",
  "Sapphire Cavern",
  "Bombs Away",
  "Sundance",
  "49 Cell",
  "The Grass Is Greener on the Other Side",
  "H2O Below 273 K",
  "The Bone",
  "Start at the End",
  "Mini Pyramid",
  "The Chambers",
  "Connect the Chips",
  "Key Farming",
  "Corral",
  "Asterisk",
  "Guard",
  "Highways",
  "Design Swap",
  "New Block in Town",
  "Chip Kart 64",
  "Squared in a Circle",
  "Klausswergner",
  "Booster Shots",
  "Flames and Ashes",
  "Double Diversion",
  "Juxtaposition",
  "Tree",
  "Breathing Room",
  "Occupied",
  "Traveler",
  "ToggleTank",
  "Funfair",
  "Shuttle Run",
  "Secret Passages",
  "Elevators",
  "Flipside",
  "Colors for Extreme",
  "Launch ", //don't ask I don't know why
  "Ruined World",
  "Mining for Gold Keys",
  "Black Hole",
  "Starry Night",
  "Pluto",
  "Chip Block Galaxy",
  "Chip Grove City",
  "Bowling Alleys",
  "Roundabout",
  "The Shifting Maze",
  "Flame War",
  "Slime Forest",
  "Courtyard",
  "Going Underground",
  "Gate Keeper",
  "Rat Race",
  "Deserted Battlefield",
  "Loose Pocket",
  "Time Suspension",
  "Frozen in Time",
  "Portcullis",
  "Hotel Chip",
  "Tunnel Clearance",
  "Jailbird",
  "Paramecium Palace",
  "Exhibit Hall",
  "Green Clear",
  "Badlands",
  "Alternate Universe",
  "Carousel",
  "Teleport Trouble",
  "Comfort Zone",
  "California",
  "Communism",
  "Blobs on a Plane",
  "Runaway Train",
  "The Sewers",
  "Metal Harbor",
  "Chip Plank Galleon",
  "Jeepers Creepers",
  "The Very Hungry Caterpillar",
  "Utter Clutter",
  "Blockade",
  "Peek-a-Boo",
  "In the Pink",
  "Elemental Park",
  "Frogger",
  "Dynamite",
  "Easier Than It Looks",
  "Spumoni",
  "Steam Cleaner Simulator",
  "(Ir)reversible",
  "Culprit",
  "Whirlpool",
  "Thief Street",
  "Chip Alone",
  "Assassin",
  "Automatic (Caution) Doors",
  "Flush",
  "Bummbua Banubauabgv",
  "Amphibia",
  "The Ancient Temple",
  "Chance Time!",
  "Cineworld",
  "Thief, You've Taken All That Was Me",
  "The Snipers",
  "Clubhouse",
};

uint16_t times[] = {
  200,
  200,
  200,
  250,
  250,
  200,
  200,
  250,
  250,
  400,
  250,
  350,
  300,
  250,
  400,
  350,
  0,
  300,
  400,
  450,
  198,
  400,
  250,
  350,
  150,
  200,
  300,
  350,
  376,
  250,
  175,
  350,
  0,
  350,
  450,
  250,
  400,
  600,
  250,
  0,
  200,
  600,
  250,
  500,
  300,
  350,
  0,
  200,
  490,
  200,
  300,
  350,
  500,
  250,
  400,
  0,
  350,
  400,
  0,
  300,
  450,
  500,
  200,
  90,
  500,
  350,
  400,
  0,
  350,
  500,
  400,
  200,
  500,
  450,
  300,
  500,
  60,
  600,
  0,
  450,
  0,
  150,
  0,
  600,
  999,
  350,
  700,
  0,
  450,
  400,
  400,
  999,
  350,
  600,
  400,
  450,
  450,
  400,
  0,
  350,
  0,
  0,
  0,
  750,
  300,
  400,
  450,
  350,
  500,
  0,
  0,
  600,
  0,
  350,
  500,
  600,
  300,
  200,
  450,
  0,
  350,
  700,
  100,
  777,
  250,
  450,
  500,
  800,
  300,
  0,
  130,
  500,
  500,
  400,
  450,
  0,
  200,
  600,
  300,
  999,
  350,
  400,
  0,
  600,
  250,
  500,
  999,
  450,
  600,
};

namespace {
  TEST(FormatCCL, LoadCCLP1) {
    Result_LevelSetPtr res = parse_ccl(CCLP1_ccl, sizeof(CCLP1_ccl));
    EXPECT_TRUE(res.success);

    LevelSet* set = res.value;
    EXPECT_EQ(set->levels_n, 149);
    EXPECT_EQ(set->levels_n, 149);

    for (size_t i = 0; i < 149; i++) {
      EXPECT_STREQ(set->levels[i].title, titles[i]);
      EXPECT_EQ(set->levels[i].time_limit, times[i]);

      Result_LevelPtr level_res = LevelMetadata_make_level(&set->levels[i], &ms_logic);
      EXPECT_TRUE(level_res.success);
      Level_free(level_res.value);
    }
    LevelSet_free(set);
  }

  TEST(FormatTws, EmptyFile) {
    uint8_t data[0];
    Result_LevelSetPtr ccl = parse_ccl(data, 0);
    ASSERT_FALSE(ccl.success);
  }

  TEST(FormatTws, NullFile) {
    Result_LevelSetPtr ccl = parse_ccl(NULL, 100);
    ASSERT_FALSE(ccl.success);
  }
}
